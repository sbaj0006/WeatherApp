{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smart\\\\React\\\\WeatherApp\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport axios from \"axios\";\nconst API_KEY = \"67297da4c387652c4857a1e54dae3f3f\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n      users: [],\n      id: 0\n    };\n\n    this.getWeather = async (e, id) => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n\n      if (city && country) {\n        console.log(data);\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n        axios.post(\"http://localhost/api\", {\n          city: this.state.city,\n          country: this.state.country\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter value\"\n        });\n      }\n    };\n\n    this.cityChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.countryChange = event => {\n      this.setState({\n        country: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost/api\").then(res => {\n      this.setState({\n        users: res.data,\n        id: 0,\n        city: \"\",\n        country: \"\"\n      }); // console.log(data);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-5 title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.getWeather(e, this.state.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.cityChange(e),\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"City...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.countryChange(e),\n      type: \"text\",\n      name: \"country\",\n      placeholder: \"Country...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Get Weather\")), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/smart/React/WeatherApp/src/App.js"],"names":["React","Component","Titles","Form","Weather","axios","API_KEY","App","state","temperature","undefined","city","country","humidity","description","error","users","id","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","console","log","setState","main","temp","name","sys","weather","post","cityChange","event","countryChange","componentDidMount","get","then","res","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Titles from \"./components/Titles\";\r\nimport Form from \"./components/Form\";\r\nimport Weather from \"./components/Weather\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"67297da4c387652c4857a1e54dae3f3f\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    temperature: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n    error: undefined,\r\n    users: [],\r\n    id: 0,\r\n  };\r\n\r\n  getWeather = async (e, id) => {\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n\r\n    const api_call = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\r\n    );\r\n    const data = await api_call.json();\r\n    if (city && country) {\r\n      console.log(data);\r\n      this.setState({\r\n        temperature: data.main.temp,\r\n        city: data.name,\r\n        country: data.sys.country,\r\n        humidity: data.main.humidity,\r\n        description: data.weather[0].description,\r\n        error: \"\",\r\n      });\r\n      axios.post(\"http://localhost/api\", {\r\n        city: this.state.city,\r\n        country: this.state.country,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        temperature: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        humidity: undefined,\r\n        description: undefined,\r\n        error: \"Please enter value\",\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost/api\").then((res) => {\r\n      this.setState({\r\n        users: res.data,\r\n        id: 0,\r\n        city: \"\",\r\n        country: \"\",\r\n      });\r\n      // console.log(data);\r\n    });\r\n  }\r\n\r\n  cityChange = (event) => {\r\n    this.setState({\r\n      city: event.target.value,\r\n    });\r\n  };\r\n\r\n  countryChange = (event) => {\r\n    this.setState({\r\n      country: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"main\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xs-5 title-container\">\r\n                  <Titles />\r\n                </div>\r\n                <div className=\"col-xs-7 form-container\">\r\n                  {/* <Form\r\n                    onChange={this.cityChange}\r\n                    getWeather={this.getWeather}\r\n                  /> */}\r\n                  <form onSubmit={(e) => this.getWeather(e, this.state.id)}>\r\n                    <input\r\n                      onChange={(e) => this.cityChange(e)}\r\n                      type=\"text\"\r\n                      name=\"city\"\r\n                      placeholder=\"City...\"\r\n                    ></input>\r\n                    <input\r\n                      onChange={(e) => this.countryChange(e)}\r\n                      type=\"text\"\r\n                      name=\"country\"\r\n                      placeholder=\"Country...\"\r\n                    ></input>\r\n                    <button>Get Weather</button>\r\n                  </form>\r\n                  <Weather\r\n                    temperature={this.state.temperature}\r\n                    humidity={this.state.humidity}\r\n                    city={this.state.city}\r\n                    country={this.state.country}\r\n                    description={this.state.description}\r\n                    error={this.state.error}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}